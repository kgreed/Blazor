<div class="code-snippet card demo-card-wide">
    <CodeSnippetHeader></CodeSnippetHeader>
    <div class="card-footer text-muted">
        <CodeSnippet>
@(@"<DxDataGrid Data=@DataSource
            AllowDataRowSelection=true
            ShowFilterRow=false
            RowRemoving=@((dataItem) => OnRowRemoving(dataItem))
            RowUpdating=@((updatingDataItem, newValues) => OnRowUpdating(updatingDataItem, newValues))
            RowInserting=@((newValues) => OnRowInserting(newValues))>

    <DxDataGridCommandColumn Width=""150px""></DxDataGridCommandColumn>

    <DxDataGridColumn Field=@nameof(Product.ProductName) Caption=""Product Name"">
    </DxDataGridColumn>

    <DxDataGridColumn Field=@nameof(Product.Availability ) Caption=""Availability"" Width=""150px"">
        <DisplayTemplate>
            @{
                var id = Guid.NewGuid().ToString();
                var inStock = (context as Product).Availability;
                <input id=@id type=""checkbox"" checked=@inStock disabled readonly />
                if (inStock)
                {
                    <label class=""form-check-label text-success"" for=@id><span>In stock</span></label>
                }
                else
                {
                    <label class=""form-check-label text-danger"" for=@id><span>Sold out</span></label>
                }
            }
        </DisplayTemplate>
        <EditTemplate>
            <DxComboBox Data=@(new List<string>() { ""In stock"", ""Sold out"" })
                        SelectedItem=@(((bool)((CellEditContext)context).CellValue) ? ""In stock"" : ""Sold out"" )
                        SelectedItemChanged=@(newCellValue => ((CellEditContext)context).OnChanged(newCellValue == ""In stock""))>
            </DxComboBox>
        </EditTemplate>
    </DxDataGridColumn>

    <DxDataGridColumn Field=@nameof(Product.ProductCategoryId) Caption=""Category"">
        <DisplayTemplate>
            @{
                var item = NestedDataSource.Where(x => x.ProductSubcategoryID == (int)((context as Product).ProductCategoryId)).FirstOrDefault();
                <span>@item.Category/@item.Subcategory</span>
            }
        </DisplayTemplate>
        <EditTemplate>
            <DxDataGrid Data=@NestedDataSource
                        PageSize=5
                        SelectedDataRow=@(NestedDataSource.Where(x => x.ProductSubcategoryID == (int)((CellEditContext)context).CellValue).FirstOrDefault())
                        SelectedDataRowChanged=@(newCellValue => ((CellEditContext)context).OnChanged(newCellValue.ProductSubcategoryID))>
                <DxDataGridColumn Field=@nameof(ProductCategory.ProductSubcategoryID) Width=""150px""></DxDataGridColumn>
                <DxDataGridColumn Field=@nameof(ProductCategory.Category) Width=""150px""></DxDataGridColumn>
                <DxDataGridColumn Field=@nameof(ProductCategory.Subcategory) Width=""150px""></DxDataGridColumn>
                <DxDataGridColumn Field=@nameof(ProductCategory.LastUpdatedDate) Width=""150px""></DxDataGridColumn>
            </DxDataGrid>
        </EditTemplate>
    </DxDataGridColumn>

</DxDataGrid>")
        </CodeSnippet>
    </div>
</div>
